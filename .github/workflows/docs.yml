---
name: Docs

on:
  push:
    branches: [ dev ]
  workflow_dispatch:

env:
  PROJECT_NAME: OffRouteMap

jobs:
  docs:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install Doxygen and graphviz
        run: |
           sudo apt-get install -y doxygen graphviz zip

      - name: Restore dependencies
        run: dotnet restore

      - name: Find Roslyn csc.dll
        id: find-csc
        run: |
           CSC_PATH=$(find /usr/share/dotnet/sdk/ -path '*/Roslyn/bincore/csc.dll' | head -n 1)
           echo "csc-path=$CSC_PATH" >> $GITHUB_OUTPUT

      - name: Compile only code parts to generate XML
        run: |
           mkdir out
           FILES=$(find . -name "*.cs" ! -name "*.g.cs" ! -name "*.Designer.cs")
           dotnet "${{ steps.find-csc.outputs.csc-path }}" \
            -target:library \
            -nologo \
            -warn:0 \
            -doc:out/docs.xml \
            -out:out/${{ env.PROJECT_NAME }}.dll \
            $FILES

      - name: Build with XML docs
        run: dotnet build -c Release /p:DocumentationFile=bin/Release/docs.xml

      - name: Create Doxyfile
        run: |
           cat > Doxyfile <<DOXY
           PROJECT_NAME           = "${{ env.PROJECT_NAME }}"
           OUTPUT_DIRECTORY       = html
           GENERATE_HTML          = YES
           GENERATE_LATEX         = NO
           RECURSIVE              = YES
           INPUT                  = .
           FILE_PATTERNS          = *.cs
           EXTRACT_ALL            = YES
           ENABLE_PREPROCESSING   = YES
           MACRO_EXPANSION        = NO
           XML_INPUT              = out/docs.xml
           DOXY

      - name: Run Doxygen
        run: |
           doxygen Doxyfile

      - name: Zip generated HTML
        run: |
           zip -r ${{ env.PROJECT_NAME }}_docs_html.zip html

      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: ${PROJECT_NAME}_docs_html.zip